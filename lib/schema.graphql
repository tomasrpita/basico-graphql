type Course {
	_id: ID!
	title: String!
	teacher: String
	description: String!
	topic: String
	people: [Student]
}

type Student {
	_id: ID!
	name: String!
	email: String!
}

type Query {
	"Devuelve todos los coursos"
	getCourses: [Course]
	"Devuelve un curso por id"
	getCourse(id: ID!): Course
	"Devuelve todos los estudiantes"
	getStudents: [Student]
	"Devuelve un estudiante por id"
	getStudent(id: ID!): Student
}

input CourseInput {
	title: String!
	teacher: String
	description: String!
	topic: String
}

# este es distinto ya q no necesita campos obligatorios
input CourseEditInput {
	title: String
	teacher: String
	description: String
	topic: String
}

input StudentInput {
	name: String!
	email: String!
}

input StudentEditInput {
	name: String
	email: String
}


type Mutation {
	"Crea un Curso"
	createCourse(input: CourseInput!): Course
	"Edita un Curso"
	editCourse(_id: ID!, input: CourseEditInput): Course
	"Elimina un Curso"
  	deleteCourse(_id: ID!): String
	"Crea un Student"
	createStudent(input: StudentInput!): Student
	"edita un Student"
	editStudent(_id: ID!, input: StudentEditInput!): Student
	"Elimina un estudiante"
  	deleteStudent(_id: ID!): String
	"Agrega Persona a curso"
	addPeople(courseID: ID!, personID: ID!): Course
}
